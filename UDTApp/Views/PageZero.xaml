<UserControl x:Class="UDTApp.Views.PageZero"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             mc:Ignorable="d" 
             xmlns:prism="http://prismlibrary.com/"
             prism:ViewModelLocator.AutoWireViewModel="True"
             xmlns:local="clr-namespace:UDTApp.Models"
             xmlns:vm="clr-namespace:UDTApp.ViewModels"
             xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity" 
             d:DesignHeight="300" d:DesignWidth="300">
    
    <UserControl.Resources>

        <BooleanToVisibilityConverter x:Key="BoolToVis" />

        <vm:InverseBooleanConverter x:Key="invertBoolConverter"/>

        <ControlTemplate x:Key="MyPop">

            <Popup IsOpen="{Binding PopUpOpen, Mode=OneWay}" Opacity="0.0" AllowsTransparency="True"
                DataContext="{Binding PlacementTarget.DataContext, RelativeSource={RelativeSource Mode=Self}}"
                        PlacementTarget="{Binding ElementName=NameEdit}"
                        Placement="Right" HorizontalOffset="60" VerticalOffset="-10">

                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="Loaded" >
                        <prism:InvokeCommandAction Command="{Binding PopupLoadCommand }" />
                    </i:EventTrigger>
                </i:Interaction.Triggers>

                <Border BorderThickness="1" BorderBrush="Red" Background="White">
                    <StackPanel VerticalAlignment="Center" MinHeight="20" MinWidth="200" FocusManager.FocusedElement="{Binding ElementName=NameBox}">
                        <TextBlock Visibility="{Binding ErrorTextVisable, Converter={StaticResource BoolToVis}}" HorizontalAlignment="Center" Foreground="Red" Margin="3 3 3 3" 
                            Text="{Binding ElementName=NameEdit, Path=(Validation.Errors).CurrentItem.ErrorContent, FallbackValue='Valid Item Name'}"/>
                        <!--<WrapPanel HorizontalAlignment="Center">
                            <Label Height="25"  Content="Item Name: " />
                            <TextBox Name="NameBox" Height="25" VerticalContentAlignment="Center" 
                                vm:FocusExtension.IsFocused="{Binding PopUpOpen}"
                                Text="{Binding Name, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                            </TextBox>
                        </WrapPanel>
                        <WrapPanel HorizontalAlignment="Center">
                            <Button Width="60" Margin="5,0,0,0" HorizontalAlignment="Left" Content="Save">
                                <i:Interaction.Triggers>
                                    <i:EventTrigger EventName="Click" >
                                        <prism:InvokeCommandAction Command="{Binding SaveNameCommand }" />
                                    </i:EventTrigger>
                                </i:Interaction.Triggers>
                            </Button>
                            <Button Width ="60" Margin="5,0,0,0" HorizontalAlignment="Right" Content="Delete">
                                <i:Interaction.Triggers>
                                    <i:EventTrigger EventName="Click" >
                                        <prism:InvokeCommandAction Command="{Binding DeleteItemCommand }" />
                                    </i:EventTrigger>
                                </i:Interaction.Triggers>
                            </Button>
                        </WrapPanel>-->
                    </StackPanel>
                </Border>
            </Popup>
        </ControlTemplate>
        
        <ControlTemplate x:Key="EditButton">
            <Grid ZIndex ="20">
            <Button Visibility="{Binding SchemaItem, Converter={StaticResource BoolToVis}}" Content="X" Height="auto" 
                    Width="auto" FontSize="12" IsEnabled="False"
                    HorizontalAlignment="Center" VerticalAlignment="Center" VerticalContentAlignment="Top" 
                    Background="Transparent" BorderBrush="Transparent" ToolTip="Delete Item" >
                <Button.RenderTransform>
                     <TransformGroup>
                        <TranslateTransform X="-11" Y="-4" />
                    </TransformGroup>
                </Button.RenderTransform>
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="Click" >
                        <prism:InvokeCommandAction Command="{Binding PopupOpenCommand}" />
                    </i:EventTrigger>
                </i:Interaction.Triggers>
            </Button>
            </Grid>
        </ControlTemplate>

        <ControlTemplate x:Key="ButtonDrag">
            <Button Height="20" vm:Ex.SecurityId ="{Binding ChildData}" 
                    AllowDrop="{Binding AllowDrop}" 
                    Background="{Binding backgroundBrush}" 
                    Width="50" Content="{Binding TypeName}" HorizontalAlignment="Left" VerticalContentAlignment="Center"
                    HorizontalContentAlignment="Left"  BorderThickness="0,2,2,2" BorderBrush="Black">

                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="PreviewMouseMove" >
                        <prism:InvokeCommandAction Command="{Binding MouseMoveCommand }" />
                    </i:EventTrigger>
                    <i:EventTrigger EventName="DragEnter" >
                        <prism:InvokeCommandAction Command="{Binding DragEnterCommand}" />
                    </i:EventTrigger>
                    <i:EventTrigger EventName="PreviewDrop" >
                        <prism:InvokeCommandAction Command="{Binding DragDropCommand}" />
                    </i:EventTrigger>
                    <i:EventTrigger EventName="DragOver" >
                        <prism:InvokeCommandAction Command="{Binding DragOverCommand}" />
                    </i:EventTrigger>


                </i:Interaction.Triggers>

            </Button>
        </ControlTemplate>
        
 
        <Style x:Key="OnOffToggleImageStyle" TargetType="ToggleButton">
            <Setter Property="Width" Value="20" />
            <Setter Property="Height" Value="20" />
            <Setter Property="HorizontalAlignment" Value="Left" />
            <Setter Property="BorderThickness" Value="0" />
            <Style.Triggers>
                <Trigger Property="IsChecked" Value="True">
                    <Setter Property="Content" Value="-" />
                </Trigger>
                <Trigger Property="IsChecked" Value="False">
                    <Setter Property="Content" Value="+" />
                </Trigger>
            </Style.Triggers>
        </Style>

        <!--<DataTemplate DataType    = "{x:Type local:UDTData}">
            <StackPanel>
                <TextBlock Text="{Binding Path=Name}"/>
                <ToggleButton Background="Transparent" x:Name="toggleButton" Style="{StaticResource OnOffToggleImageStyle}"/>
                <ListView Margin="10,0,0,0" BorderThickness="0" ItemsSource = "{Binding Path=ChildData}"
                              Visibility="{Binding IsChecked, ElementName=toggleButton, Converter={StaticResource BoolToVis}}"/>
                <ToggleButton  Background="Transparent" x:Name="toggleButton2" Style="{StaticResource OnOffToggleImageStyle}"/>
                <ListView  Margin="10,0,0,0"  BorderThickness="0" ItemsSource = "{Binding Path=Teams}"
                              Visibility="{Binding IsChecked, ElementName=toggleButton2, Converter={StaticResource BoolToVis}}"/>
            </StackPanel>
        </DataTemplate>-->

        <Style TargetType="{x:Type TextBox}">
            <Setter Property="Validation.ErrorTemplate">
                <Setter.Value>
                    <ControlTemplate>
                        <DockPanel>
                            <Border BorderBrush="Red" BorderThickness="2" CornerRadius="2">
                                <AdornedElementPlaceholder/>
                            </Border>
                        </DockPanel>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="Validation.HasError" Value="true">
                    <Setter Property="ToolTip" Value="{Binding RelativeSource={x:Static RelativeSource.Self}, Path=(Validation.Errors)[0].ErrorContent}"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <!--<ControlTemplate x:Key="validationErrorTemplate">
            <Canvas>
            <DockPanel  >
                <TextBlock Foreground="Red" Text="{Binding Path=[0].ErrorContent}"
                    DockPanel.Dock="Right">              
                </TextBlock>
                <AdornedElementPlaceholder 
                   x:Name="ErrorAdorner"
                />

            </DockPanel>
            </Canvas>
        </ControlTemplate>-->

        <DataTemplate DataType    = "{x:Type local:UDTData}">

            <StackPanel Margin="0 5 0 0" ClipToBounds="False" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                
                <ContentControl Template="{StaticResource MyPop}"/>

                <Border  BorderThickness="0,0,0,0" BorderBrush="Black">
                    <WrapPanel >

                        <TextBox Name="NameEdit" Height="20" MinWidth="{Binding EditBoxMinWidth}" Margin="0,0,0,0" BorderThickness="2,2,0,2" BorderBrush="Black" Background="{Binding backgroundBrush}"
                             Text="{Binding Name, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
                             HorizontalAlignment="Center" VerticalContentAlignment="Center" 
                                 vm:FocusExtension.IsFocused="{Binding PopUpOpen}" 
                                 ToolTip="Edit Item Name" IsEnabled="{Binding EditBoxEnabled}"/>


                        <!--<Button Height="20" vm:Ex.SecurityId ="{Binding ChildData}" AllowDrop="True" Background="MistyRose" 
                            Width="40" Content="{Binding TypeName}" HorizontalAlignment="Left" VerticalContentAlignment="Center"
                            HorizontalContentAlignment="Left"  BorderThickness="0,2,2,2" BorderBrush="Black"> 
                            
                            <i:Interaction.Triggers>
                                <i:EventTrigger EventName="PreviewMouseMove" >
                                    <prism:InvokeCommandAction Command="{Binding MouseMoveCommand }" />
                                </i:EventTrigger>
                                <i:EventTrigger EventName="DragEnter" >
                                    <prism:InvokeCommandAction Command="{Binding DragEnterCommand}" />
                                </i:EventTrigger>
                                <i:EventTrigger EventName="PreviewDrop" >
                                    <prism:InvokeCommandAction Command="{Binding DragDropCommand}" />
                                </i:EventTrigger>
                                <i:EventTrigger EventName="DragOver" >
                                    <prism:InvokeCommandAction Command="{Binding DragOverCommand}" />
                                </i:EventTrigger>
                            </i:Interaction.Triggers>
                            
                        </Button>-->

                        <ContentControl Template="{StaticResource ButtonDrag}"/>

                        <ContentControl Template="{StaticResource EditButton}"/>

                    </WrapPanel>
                </Border>
                
                <ItemsControl HorizontalAlignment="Left" Margin="30,0,0,0" Background="Transparent" BorderThickness="0,0,0,0" 
                         ItemsSource = "{Binding Path=ChildData}"/>
            </StackPanel>
        </DataTemplate>
        
        <DataTemplate DataType    = "{x:Type local:UDTTxtItem}">

            <StackPanel Margin="0 5 0 0"  ClipToBounds="False" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">

                <ContentControl Template="{StaticResource MyPop}"/>

                <Border  BorderThickness="0,0,0,0" BorderBrush="Black">
                    <WrapPanel>

                        <TextBox Name="NameEdit" Height="20" MinWidth="{Binding EditBoxMinWidth}" Margin="0,0,0,0" BorderThickness="2,2,0,2" BorderBrush="Black" Background="{Binding backgroundBrush}"
                             Text="{Binding Name, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
                             HorizontalAlignment="Center" VerticalContentAlignment="Center" 
                                 vm:FocusExtension.IsFocused="{Binding PopUpOpen}" 
                                 ToolTip="Edit Item Name"  IsEnabled="{Binding EditBoxEnabled}"/>


                        <ContentControl Template="{StaticResource ButtonDrag}"/>

                        <ContentControl Template="{StaticResource EditButton}"/>


                    </WrapPanel>
                </Border>

            </StackPanel>
        </DataTemplate>
        
        <DataTemplate DataType    = "{x:Type local:UDTIntItem}">
            <StackPanel  Margin="0 5 0 0" ClipToBounds="False" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                <ContentControl Template="{StaticResource MyPop}"/>
                <Border  BorderThickness="0,0,0,0" BorderBrush="Black">
                    <WrapPanel>

                        <TextBox Name="NameEdit" Height="20" MinWidth="{Binding EditBoxMinWidth}" Margin="0,0,0,0" BorderThickness="2,2,0,2" BorderBrush="Black" Background="{Binding backgroundBrush}"
                             Text="{Binding Name, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
                             HorizontalAlignment="Center" VerticalContentAlignment="Center" 
                                 vm:FocusExtension.IsFocused="{Binding PopUpOpen}" 
                                 ToolTip="Edit Item Name" IsEnabled="{Binding EditBoxEnabled}"/>

                        <ContentControl Template="{StaticResource ButtonDrag}"/>
                        
                        <ContentControl Template="{StaticResource EditButton}"/>

                    </WrapPanel>
                </Border>
            </StackPanel>
        </DataTemplate>
        
        <DataTemplate DataType    = "{x:Type local:UDTDecimalItem}">
            <StackPanel  Margin="0 5 0 0" ClipToBounds="False" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                <ContentControl Template="{StaticResource MyPop}"/>
                <Border  BorderThickness="0,0,0,0" BorderBrush="Black">
                    <WrapPanel>

                        <TextBox Name="NameEdit" Height="20" MinWidth="{Binding EditBoxMinWidth}" Margin="0,0,0,0" BorderThickness="2,2,0,2" BorderBrush="Black" Background="{Binding backgroundBrush}"
                             Text="{Binding Name, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
                             HorizontalAlignment="Center" VerticalContentAlignment="Center" 
                                 vm:FocusExtension.IsFocused="{Binding PopUpOpen}" 
                                 ToolTip="Edit Item Name" IsEnabled="{Binding EditBoxEnabled}"/>

                        <ContentControl Template="{StaticResource ButtonDrag}"/>
                        
                        <ContentControl Template="{StaticResource EditButton}"/>

                    </WrapPanel>
                </Border>
            </StackPanel>
        </DataTemplate>
        
        <DataTemplate DataType    = "{x:Type local:UDTDateItem}">
            <StackPanel  Margin="0 5 0 0" ClipToBounds="False" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                <ContentControl Template="{StaticResource MyPop}"/>
                <Border  BorderThickness="0,0,0,0" BorderBrush="Black">
                    <WrapPanel>

                        <TextBox Name="NameEdit" Height="20" MinWidth="{Binding EditBoxMinWidth}" Margin="0,0,0,0" BorderThickness="2,2,0,2" BorderBrush="Black" Background="{Binding backgroundBrush}"
                             Text="{Binding Name, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
                             HorizontalAlignment="Center" VerticalContentAlignment="Center" 
                                 vm:FocusExtension.IsFocused="{Binding PopUpOpen}" 
                                 ToolTip="Edit Item Name"  IsEnabled="{Binding EditBoxEnabled}"/>

                        <ContentControl Template="{StaticResource ButtonDrag}"/>

                        <ContentControl Template="{StaticResource EditButton}"/>

                    </WrapPanel>
                </Border>
            </StackPanel>
        </DataTemplate>

    </UserControl.Resources>
    <Grid >
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="auto" MinWidth="500"/>
            <ColumnDefinition Width="150"/>
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="30"/>
            <RowDefinition Height="400"/>
        </Grid.RowDefinitions>
        <!--<ListBox Grid.Column="0" Grid.Row="1" ItemsSource="{Binding SchemaList}" 
                 vm:AttachedAdorner.Adorner="{x:Type vm:NoteAdorner}" AllowDrop="{Binding AnyErrors}"  >-->
        <ListBox Grid.Column="0" Grid.Row="1" ItemsSource="{Binding SchemaList}" 
                 vm:AttachedAdorner.Adorner="{Binding Path=AdornerType, Mode=TwoWay}" >   
        </ListBox>
        <Label Grid.Column="0" Grid.Row="0" Content="{Binding DbSchema.Count}"/>
        <StackPanel Grid.Column="1" Grid.Row="1">
            <ListBox  ItemsSource="{Binding UDTItems}"></ListBox>
            <Button Content="SaveToXml">
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="Click" >
                        <prism:InvokeCommandAction Command="{Binding SaveToXmlCommand}" />
                    </i:EventTrigger>
                </i:Interaction.Triggers>
            </Button>
            <Button Content="ReadFromXmlFile">
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="Click" >
                        <prism:InvokeCommandAction Command="{Binding ReadFromFileCommand}" />
                    </i:EventTrigger>
                </i:Interaction.Triggers>
            </Button>
            <Button Content="CreateDataBase">
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="Click" >
                        <prism:InvokeCommandAction Command="{Binding CreateDataBaseCommand}" />
                    </i:EventTrigger>
                </i:Interaction.Triggers>
            </Button>
            <Button Content="ReadFromDataBase">
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="Click" >
                        <prism:InvokeCommandAction Command="{Binding ReadDataBaseCommand}" />
                    </i:EventTrigger>
                </i:Interaction.Triggers>
            </Button>
        </StackPanel>

    </Grid>
</UserControl>
