<UserControl x:Class="UDTApp.Views.PageZero"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             mc:Ignorable="d" 
             xmlns:prism="http://prismlibrary.com/"
             prism:ViewModelLocator.AutoWireViewModel="True"
             xmlns:local="clr-namespace:UDTApp.Models"
             xmlns:dataEntry="clr-namespace:UDTApp.ViewModels.DataEntryControls"
             xmlns:vm="clr-namespace:UDTApp.ViewModels"
             xmlns:diag="clr-namespace:System.Diagnostics;assembly=WindowsBase"
             xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity" 
             xmlns:custCtl="clr-namespace:UDTAppControlLibrary.Controls;assembly=UDTAppControlLibrary"
             d:DesignHeight="300" d:DesignWidth="300">

    <i:Interaction.Triggers>
        <i:EventTrigger EventName="Loaded">
            <i:InvokeCommandAction Command="{Binding WindowLoadedCommand}" />
        </i:EventTrigger>
    </i:Interaction.Triggers>

    <UserControl.Resources>

        <BooleanToVisibilityConverter x:Key="BoolToVis" />

        <vm:InverseBooleanConverter x:Key="invertBoolConverter"/>

        <ControlTemplate x:Key="MyPop">

            <Popup IsOpen="{Binding PopUpOpen, Mode=OneWay}" Opacity="0.0" AllowsTransparency="True"
                DataContext="{Binding PlacementTarget.DataContext, RelativeSource={RelativeSource Mode=Self}}"
                PlacementTarget="{Binding ElementName=NameEdit}"
                Placement="Right" HorizontalOffset="0" VerticalOffset="-10">
                

                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="Loaded" >
                        <prism:InvokeCommandAction Command="{Binding PopupLoadCommand }" />
                    </i:EventTrigger>
                </i:Interaction.Triggers>

                <Border BorderThickness="1" BorderBrush="Red" Background="White">
                    <StackPanel VerticalAlignment="Center" MinHeight="20" MinWidth="200" 
                                FocusManager.FocusedElement="{Binding ElementName=NameBox}">
                        <!--<TextBlock Visibility="{Binding ErrorTextVisable, Converter={StaticResource BoolToVis}}" 
                            HorizontalAlignment="Center" Foreground="Red" Margin="3 3 3 3" 
                            Text="{Binding ElementName=NameEdit, 
                            Path=(Validation.Errors).CurrentItem.ErrorContent, FallbackValue='Valid Item Name'}"/>-->
                        <!--<TextBlock 
                            HorizontalAlignment="Center" Foreground="Red" Margin="3 3 3 3" 
                            Text="{Binding currentValidationError}"/>-->
                        <ListBox ItemsSource="{Binding currentValidationError}" Foreground="Red"/>
                        <!--<ListBox ItemsSource="{Binding editProps.currentValidationError}" Foreground="Red"/>-->
                    </StackPanel>
                </Border>
            </Popup>
        </ControlTemplate>
        
        <ControlTemplate x:Key="EditButton">
            <!--<Grid ZIndex ="20">-->
            <Button Visibility="{Binding editButtonVisibility}" Content="X" Height="12" 
                    Width="10" FontSize="8" AllowDrop="False"
                    HorizontalAlignment="Center" VerticalAlignment="Top" VerticalContentAlignment="Top" 
                    Background="Transparent" BorderBrush="Transparent" ToolTip="Delete Item" >
                <Button.RenderTransform>
                     <TransformGroup>
                        <TranslateTransform X="-8" Y="-4" />
                     </TransformGroup>
                </Button.RenderTransform>
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="Click" >
                        <prism:InvokeCommandAction Command="{Binding DeleteItemCommand}" />
                    </i:EventTrigger>
                </i:Interaction.Triggers>
            </Button>
            <!--</Grid>-->
        </ControlTemplate>

        <ControlTemplate x:Key="NameEditBox">
            
            <StackPanel>
            <!--<Popup IsOpen="{Binding PopUpOpen, Mode=OneWay}" Opacity="0.0" AllowsTransparency="True" PopupAnimation="Fade"
                   StaysOpen="False"
                DataContext="{Binding PlacementTarget.DataContext, RelativeSource={RelativeSource Mode=Self}}"
                        PlacementTarget="{Binding ElementName=NameEdit}"
                        Placement="Right" HorizontalOffset="0" VerticalOffset="-10">


                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="Loaded" >
                        <prism:InvokeCommandAction Command="{Binding PopupLoadCommand }" />
                    </i:EventTrigger>
                </i:Interaction.Triggers>

                <Border BorderThickness="1" BorderBrush="Red" Background="White">
                    <StackPanel VerticalAlignment="Center" MinHeight="20" MinWidth="200" Background="Transparent"
                                FocusManager.FocusedElement="{Binding ElementName=NameBox}">
                        <TextBlock Visibility="{Binding ErrorTextVisable, Converter={StaticResource BoolToVis}}" 
                            HorizontalAlignment="Center" Foreground="Red" Background="Transparent" Margin="3 3 3 3" 
                            Text="{Binding ElementName=NameEdit, 
                            Path=(Validation.Errors).CurrentItem.ErrorContent, FallbackValue='Valid Item Name'}"/>
                        
                        
                    </StackPanel>
                </Border>
            </Popup>-->

                <ContentControl Template="{StaticResource MyPop}"/>


                <TextBox Name="NameEdit" Height="20" MinWidth="{Binding EditBoxMinWidth}" Margin="5,0,5,0" 
                    Visibility="{Binding SchemaItem, Converter={StaticResource BoolToVis}}"
                    BorderThickness="1,1,1,1" 
                    BorderBrush="Black" 
                    Background="{Binding backgroundBrush}"
                    Text="{Binding Name, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
                    HorizontalAlignment="Stretch" VerticalContentAlignment="Bottom" 
                    HorizontalContentAlignment="Center" 
                    IsReadOnly="{Binding IsReadOnly}">

                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="MouseEnter" >
                            <prism:InvokeCommandAction Command="{Binding MouseEnterCommand }" />
                        </i:EventTrigger>
                        <i:EventTrigger EventName="MouseLeave" >
                            <prism:InvokeCommandAction Command="{Binding MouseLeaveCommand}" />
                        </i:EventTrigger>

                        <i:EventTrigger EventName="GotFocus">
                            <prism:InvokeCommandAction Command="{Binding ItemNameEditGotFocusCommand}" />
                        </i:EventTrigger>

                        <i:EventTrigger EventName="LostFocus">
                            <prism:InvokeCommandAction Command="{Binding ItemNameEditLostFocusCommand}" />
                        </i:EventTrigger>

                        <!--<i:EventTrigger EventName="PreviewMouseMove" >
                        <prism:InvokeCommandAction Command="{Binding MouseMoveCommand }" />
                    </i:EventTrigger>
                    <i:EventTrigger EventName="DragEnter" >
                        <prism:InvokeCommandAction Command="{Binding DragEnterCommand}" />
                    </i:EventTrigger>
                    <i:EventTrigger EventName="PreviewDrop" >
                        <prism:InvokeCommandAction Command="{Binding DragDropCommand}" />
                    </i:EventTrigger>
                    <i:EventTrigger EventName="DragOver" >
                        <prism:InvokeCommandAction Command="{Binding DragOverCommand}" />
                    </i:EventTrigger>-->

                    </i:Interaction.Triggers>

                    <TextBox.RenderTransform>
                    <TransformGroup>
                        <TranslateTransform X="0" Y="-4" />
                    </TransformGroup>
                </TextBox.RenderTransform>

                <!--<TextBox.Style>
                    <Style TargetType="TextBox">
                        <Style.Triggers>
                            <Trigger Property="Validation.HasError"  Value="True">
                                <Setter Property="BorderBrush" Value="Red"/>
                                <Setter Property="BorderThickness" Value="5,5,5,5"/>
                                <Setter Property="ToolTipService.ToolTip" 
                                        Value="{Binding RelativeSource={RelativeSource Self}, Path=(Validation.Errors)[0].ErrorContent}"/>
                            </Trigger>
                            <Trigger Property="Validation.HasError"  Value="False">
                                <Setter Property="ToolTipService.ToolTip" Value="Edit Item Name"/>
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </TextBox.Style>-->

            </TextBox>
            </StackPanel>
        </ControlTemplate>

        <ControlTemplate x:Key="ButtonDrag">
            <Button Height="{Binding  buttonHeight}" vm:Ex.SecurityId ="{Binding ChildData}" 
                    AllowDrop="False" Visibility="{Binding dragButtonVisibility}"
                    Background="{Binding backgroundBrush}" 
                    Width="{Binding buttonWidth}" HorizontalAlignment="Center" 
                    VerticalContentAlignment="Center"
                    HorizontalContentAlignment="Center"  BorderThickness="1,1,1,1" BorderBrush="Black"
                    ToolTip="Drag to Group Item."
                    Padding="-0,-7,0,-5">
                
                <Button.Content>
                    <TextBlock TextAlignment="Center" FontSize="{Binding dragButtonFontSize}" Text="{Binding TypeName}" 
                         />
                </Button.Content>

                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="PreviewMouseMove" >
                        <prism:InvokeCommandAction Command="{Binding MouseMoveCommand }" />
                    </i:EventTrigger>
                    <i:EventTrigger EventName="DragEnter" >
                        <prism:InvokeCommandAction Command="{Binding DragEnterCommand}" />
                    </i:EventTrigger>
                    <i:EventTrigger EventName="PreviewDrop" >
                        <prism:InvokeCommandAction Command="{Binding DragDropCommand}" />
                    </i:EventTrigger>
                    <i:EventTrigger EventName="DragOver" >
                        <prism:InvokeCommandAction Command="{Binding DragOverCommand}" />
                    </i:EventTrigger>

                </i:Interaction.Triggers>

            </Button>
        </ControlTemplate>
        
 
        <Style x:Key="OnOffToggleImageStyle" TargetType="ToggleButton">
            <Setter Property="Width" Value="20" />
            <Setter Property="Height" Value="20" />
            <Setter Property="HorizontalAlignment" Value="Left" />
            <Setter Property="BorderThickness" Value="0" />
            <Style.Triggers>
                <Trigger Property="IsChecked" Value="True">
                    <Setter Property="Content" Value="-" />
                </Trigger>
                <Trigger Property="IsChecked" Value="False">
                    <Setter Property="Content" Value="+" />
                </Trigger>
            </Style.Triggers>
        </Style>

        <!--<DataTemplate DataType    = "{x:Type local:UDTData}">
            <StackPanel>
                <TextBlock Text="{Binding Path=Name}"/>
                <ToggleButton Background="Transparent" x:Name="toggleButton" Style="{StaticResource OnOffToggleImageStyle}"/>
                <ListView Margin="10,0,0,0" BorderThickness="0" ItemsSource = "{Binding Path=ChildData}"
                              Visibility="{Binding IsChecked, ElementName=toggleButton, Converter={StaticResource BoolToVis}}"/>
                <ToggleButton  Background="Transparent" x:Name="toggleButton2" Style="{StaticResource OnOffToggleImageStyle}"/>
                <ListView  Margin="10,0,0,0"  BorderThickness="0" ItemsSource = "{Binding Path=Teams}"
                              Visibility="{Binding IsChecked, ElementName=toggleButton2, Converter={StaticResource BoolToVis}}"/>
            </StackPanel>
        </DataTemplate>-->

        <Style TargetType="{x:Type TextBox}">
            <Setter Property="Validation.ErrorTemplate">
                <Setter.Value>
                    <ControlTemplate>

                        <DockPanel Grid.Row="0">
                            <Border BorderBrush="Red" BorderThickness="2" CornerRadius="2">
                                <AdornedElementPlaceholder/>
                            </Border>
                        </DockPanel>
 
                    </ControlTemplate>
                </Setter.Value>
            </Setter>

        </Style>

        <!--Moved to app resources-->
        <!--<DataTemplate DataType    = "{x:Type dataEntry:UDTNumberPicker}">
            <GroupBox Header="{Binding name}" BorderBrush="Black">
                <StackPanel>
                    <Border BorderBrush="Black" BorderThickness="1" Margin="5,0,0,0">
                        <TextBox Text="{Binding txtNumber, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
                                 Background="White" />
                    </Border>
                    <WrapPanel Margin="5,0,0,0">
                        <RepeatButton Width="15" Height="15" Content=">" VerticalContentAlignment="Top" 
                                      Command="{Binding UpCommand}" Padding="0,-3,0,0" 
                                      FontWeight="ExtraBold" BorderThickness="2"/>
                        <RepeatButton Width="15" Height="15" Content="&lt;" VerticalContentAlignment="Top"  
                                      Command="{Binding DownCommand}" Padding="0,-3,0,0" Margin="3,0,0,0"
                                      FontWeight="ExtraBold" BorderThickness="2"/>
                        <RepeatButton Width="20" Height="15" Content=">>" VerticalContentAlignment="Top" 
                                      Command="{Binding FastUpCommand}" Padding="0,-3,0,0" Margin="3,0,0,0" 
                                      FontWeight="ExtraBold" BorderThickness="2" Interval="5"/>
                        <RepeatButton Width="20" Height="15" Content="&lt;&lt;" VerticalContentAlignment="Top"  
                                      Command="{Binding FastDownCommand}" Padding="0,-3,0,0" Margin="3,0,0,0"
                                      FontWeight="ExtraBold" BorderThickness="2" Interval="5"/>
                    </WrapPanel>
                    <WrapPanel>
                        <Label Content="Not Used"/>
                        <CheckBox IsChecked="{Binding notUsed}" VerticalAlignment="Center"/>
                    </WrapPanel>

                </StackPanel>
            </GroupBox>
        </DataTemplate>-->

        <DataTemplate DataType    = "{x:Type local:UDTData}">
            <Border BorderBrush="Red" BorderThickness="0">
            <StackPanel Grid.IsSharedSizeScope="True">
                <Border BorderThickness="0" BorderBrush="Black">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition SharedSizeGroup="MySizeGroup" />
                    </Grid.ColumnDefinitions>
                    <StackPanel HorizontalAlignment="Stretch">

                            <Label Content="{Binding parentObj.DisplayName}" Margin="0,-10,0,-10" FontSize="9"  
                                   HorizontalAlignment="Center"/>

                            <WrapPanel Panel.ZIndex="10" Margin="{Binding ButtonWrapPanelMargin}" HorizontalAlignment="Center">
                                <WrapPanel.RenderTransform>
                                    <TransformGroup>
                                        <TranslateTransform X="0" Y="4" />
                                    </TransformGroup>
                                </WrapPanel.RenderTransform>
                                <ContentControl Template="{StaticResource ButtonDrag}" />
                                <ContentControl Template="{StaticResource EditButton}" Panel.ZIndex="20"/>
                            </WrapPanel>

                            <ContentControl Template="{StaticResource MyPop}"/>

                            <TextBox Name="NameEdit" Height="30"  Margin="0,0,0,0" Padding="0,2,0,0"
                                Visibility="{Binding SchemaItem, Converter={StaticResource BoolToVis}}"
                                BorderThickness="1" BorderBrush="Black" Background="{Binding backgroundBrush}"
                                Text="{Binding Name, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
                                HorizontalAlignment="Stretch" 
                                VerticalContentAlignment="Top" 
                                HorizontalContentAlignment="Center" 
                                ToolTip="Edit Item Name" IsEnabled="{Binding EditBoxEnabled}"
                                AllowDrop="True">
                                
                        <i:Interaction.Triggers>
                           
                            <i:EventTrigger EventName="PreviewDrop" >
                                <prism:InvokeCommandAction Command="{Binding DragDropCommand}" />
                            </i:EventTrigger>
                            <i:EventTrigger EventName="PreviewDragOver">
                                <prism:InvokeCommandAction Command="{Binding PreviewDragEnterCommand}" />
                            </i:EventTrigger>
                            
                            <i:EventTrigger EventName="MouseEnter" >
                                <prism:InvokeCommandAction Command="{Binding MouseEnterCommand }" />
                            </i:EventTrigger>
                            <i:EventTrigger EventName="MouseLeave" >
                                <prism:InvokeCommandAction Command="{Binding MouseLeaveCommand}" />
                            </i:EventTrigger>

                            <i:EventTrigger EventName="Loaded">
                                <prism:InvokeCommandAction Command="{Binding GroupBoxLoadedCommand}" />
                            </i:EventTrigger>

                           </i:Interaction.Triggers>

                        <TextBox.RenderTransform>
                            <TransformGroup>
                                <!--<TranslateTransform X="0" Y="-6" />-->
                            </TransformGroup>
                        </TextBox.RenderTransform>
                                
                        </TextBox>
                       
                        </StackPanel>
                </Grid>
                </Border>
                
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition SharedSizeGroup="MySizeGroup" />
                    </Grid.ColumnDefinitions>
                    <ItemsControl x:Name="columnData" Margin="0,0,-10,0" 
                    BorderBrush="Black" BorderThickness="0" ItemsSource = "{Binding Path=columnData}"
                              >
                    <ItemsControl.ItemsPanel>
                        <ItemsPanelTemplate>
                            <!--<UniformGrid Rows="1"/>-->
                            
                            <WrapPanel></WrapPanel>
                            
                        </ItemsPanelTemplate>
                    </ItemsControl.ItemsPanel>
                    <ItemsControl.RenderTransform>
                        <TransformGroup>
                            <TranslateTransform X="0" Y="-15" />
                        </TransformGroup>
                    </ItemsControl.RenderTransform>
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="Loaded" >
                            <prism:InvokeCommandAction Command="{Binding SizeChangedCommand}" />
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                </ItemsControl>
                </Grid>
                <WrapPanel >
                    <ItemsControl HorizontalAlignment="Left" Margin="{Binding tableDataMargin}" BorderBrush="Black" 
                              BorderThickness="0,0,0,0"  
                         ItemsSource = "{Binding Path=tableData}" 
                             >

                </ItemsControl>
                </WrapPanel>
            </StackPanel>
            </Border>

        </DataTemplate>

      
        <DataTemplate DataType    = "{x:Type local:UDTTxtItem}">

            <StackPanel Margin="0 5 0 0"  ClipToBounds="False" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">

                <!--<ContentControl Template="{StaticResource MyPop}"/>-->

                <Border  BorderThickness="0,0,0,0" BorderBrush="Black">
                    <StackPanel>

                        <WrapPanel Panel.ZIndex="10" Margin="{Binding ButtonWrapPanelMargin}" HorizontalAlignment="Center">
                            <ContentControl Template="{StaticResource ButtonDrag}" />
                            <ContentControl Template="{StaticResource EditButton}" Panel.ZIndex="20"/>
                        </WrapPanel>
                        
                        <!--<ContentControl Template="{StaticResource MyPop}"/>-->

                        <ContentControl Template="{StaticResource NameEditBox}" Name='NameEdit'/>
 
                    </StackPanel>
                </Border>

            </StackPanel>
        </DataTemplate>

        <ControlTemplate x:Key="editPropErrorTemplate">
            <WrapPanel>
                <TextBox VerticalContentAlignment="Center" Foreground="Red" Text="{Binding Path=[0].ErrorContent}" 
                    Background="White" BorderBrush="Red" IsReadOnly="True" Width="auto" Margin="0,0,20,0"                  
                    VerticalAlignment="Center"/>
                <AdornedElementPlaceholder/>
            </WrapPanel>
        </ControlTemplate>        

        <DataTemplate DataType = "{x:Type local:UDTTextEditProps}">
            <StackPanel>
                
                <WrapPanel>
                    <Label HorizontalContentAlignment="Right" Content="Required: " 
                           Width="80"/>
                    <CheckBox Width="80" HorizontalAlignment="Left" IsChecked="{Binding required}"
                             VerticalAlignment="Center"/>
                </WrapPanel>
                
                <WrapPanel>
                    <Label HorizontalContentAlignment="Right" Content="Default Text: " 
                           Width="80"/>
                    <TextBox Width="80" HorizontalAlignment="Left" Text="{Binding defaultText}"
                             FontStyle="Normal"/>
                </WrapPanel>
                <StackPanel>
                    <!--<ContentControl Content="{Binding minPicker}" VerticalAlignment="Center"/>
                    <ContentControl Content="{Binding maxPicker}" VerticalAlignment="Center"/>-->
                    <GroupBox Header="Min Text Length:"  BorderBrush="Black">
                        <custCtl:NumberBox HorizontalAlignment="Center" Width="150" Height="auto"  
                            NumberValue="{Binding minLength, Mode=TwoWay}" MinValue="1" MaxValue="254"
                            Margin="0,10,0,0"/>
                    </GroupBox>
                    <GroupBox Header="Max Text Length:"  BorderBrush="Black">
                        <custCtl:NumberBox HorizontalAlignment="Center" Width="150" Height="auto"  
                            NumberValue="{Binding maxLength, Mode=TwoWay}" MinValue="2" MaxValue="255"
                            Margin="0,10,0,0"/>
                    </GroupBox>
                </StackPanel>
            </StackPanel>            
        </DataTemplate>
        
        <DataTemplate DataType    = "{x:Type local:UDTIntItem}">
            <StackPanel  Margin="0 5 0 0" ClipToBounds="False" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                <ContentControl Template="{StaticResource MyPop}"/>
                <Border  BorderThickness="0,0,0,0" BorderBrush="Black">
                    <StackPanel>

                        <WrapPanel Panel.ZIndex="10" Margin="{Binding ButtonWrapPanelMargin}" HorizontalAlignment="Center">
                            <ContentControl Template="{StaticResource ButtonDrag}" />
                            <ContentControl Template="{StaticResource EditButton}" Panel.ZIndex="20"/>
                        </WrapPanel>

                        <ContentControl Template="{StaticResource NameEditBox}" />
                        
                        <!--<TextBox Name="NameEdit" Height="20" MinWidth="{Binding EditBoxMinWidth}" Margin="0,0,0,0" 
                                 Visibility="{Binding SchemaItem, Converter={StaticResource BoolToVis}}"
                                 BorderThickness="2,2,0,2" BorderBrush="Black" Background="{Binding backgroundBrush}"
                             Text="{Binding Name, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
                             HorizontalAlignment="Center" VerticalContentAlignment="Center" 
                                 vm:FocusExtension.IsFocused="{Binding PopUpOpen}" 
                                 ToolTip="Edit Item Name" IsEnabled="{Binding EditBoxEnabled}"/>-->

                    </StackPanel>
                </Border>
            </StackPanel>
        </DataTemplate>

        <DataTemplate DataType = "{x:Type local:UDTIntEditProps}">
            <StackPanel>
                <WrapPanel>
                    <Label HorizontalContentAlignment="Right" Content="Required: " 
                           Width="80"/>
                    <CheckBox Width="80" HorizontalAlignment="Left" IsChecked="{Binding required}"
                             VerticalAlignment="Center"/>
                </WrapPanel>
                <StackPanel>
                    <GroupBox Header="Default Value:"  BorderBrush="Black">
                        <custCtl:NumberBox HorizontalAlignment="Center" Width="150" Height="auto"  
                        NumberValue="{Binding defaultValue, Mode=TwoWay}" />
                    </GroupBox>

                    <!--<ContentControl Content="{Binding defaultPicker}" VerticalAlignment="Center"/>-->
                    <!--<ContentControl Content="{Binding minPicker}" VerticalAlignment="Center"/>
                    <ContentControl Content="{Binding maxPicker}" VerticalAlignment="Center"/>-->
                    <GroupBox Header="Min Value:"  BorderBrush="Black">
                        <custCtl:NumberBox HorizontalAlignment="Center" Width="150" Height="auto"  
                        NumberValue="{Binding minValue, Mode=TwoWay}" />
                    </GroupBox>
                    <GroupBox Header="Max Value:"  BorderBrush="Black">
                        <custCtl:NumberBox HorizontalAlignment="Center" Width="150" Height="auto"  
                        NumberValue="{Binding maxValue, Mode=TwoWay}" />
                    </GroupBox>


                </StackPanel>
            </StackPanel>
        </DataTemplate>

        <DataTemplate DataType    = "{x:Type local:UDTDecimalItem}">
            <StackPanel  Margin="0 5 0 0" ClipToBounds="False" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                <!--<ContentControl Template="{StaticResource MyPop}"/>-->
                <Border  BorderThickness="0,0,0,0" BorderBrush="Black">
                    <StackPanel>
                        
                        <WrapPanel Panel.ZIndex="10" Margin="{Binding ButtonWrapPanelMargin}" HorizontalAlignment="Center">
                            <ContentControl Template="{StaticResource ButtonDrag}" />
                            <ContentControl Template="{StaticResource EditButton}" Panel.ZIndex="20"/>
                        </WrapPanel>
                        
                        <ContentControl Template="{StaticResource NameEditBox}" />
                        
                        <!--<TextBox Name="NameEdit" Height="20" MinWidth="{Binding EditBoxMinWidth}" 
                                 Visibility="{Binding SchemaItem, Converter={StaticResource BoolToVis}}"
                                 Margin="0,0,0,0" BorderThickness="2,2,0,2" BorderBrush="Black" Background="{Binding backgroundBrush}"
                             Text="{Binding Name, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
                             HorizontalAlignment="Center" VerticalContentAlignment="Center" 
                                 vm:FocusExtension.IsFocused="{Binding PopUpOpen}" 
                                 ToolTip="Edit Item Name" IsEnabled="{Binding EditBoxEnabled}"/>-->

                    </StackPanel>
                </Border>
            </StackPanel>
        </DataTemplate>

        <DataTemplate DataType = "{x:Type local:UDTDecimalEditProps}">
            <StackPanel>
                <WrapPanel>
                    <Label HorizontalContentAlignment="Right" Content="Required: " 
                           Width="80"/>
                    <CheckBox Width="80" HorizontalAlignment="Left" IsChecked="{Binding required}"
                             VerticalAlignment="Center"/>
                </WrapPanel>
                <WrapPanel>
                    <Label HorizontalContentAlignment="Right" Content="Edit Format: " 
                           Width="80"/>
                    <ComboBox Width="103" HorizontalAlignment="Left" 
                              SelectedItem="{Binding decimalFormat}"
                              ItemsSource="{Binding formatList}"
                             VerticalAlignment="Center"/>
                </WrapPanel>
                <StackPanel>
                    <!--<ContentControl Content="{Binding defaultPicker}" VerticalAlignment="Center"/>-->
                    <GroupBox Header="Default Value:"  BorderBrush="Black">
                        <custCtl:DecimalBox HorizontalAlignment="Center" Width="150" Height="auto"  
                        DecimalValue="{Binding defaultValue, Mode=TwoWay}" />
                    </GroupBox>
                    <!--<ContentControl Content="{Binding minPicker}" VerticalAlignment="Center"/>
                    <ContentControl Content="{Binding maxPicker}" VerticalAlignment="Center"/>-->
                    <GroupBox Header="Min Value:"  BorderBrush="Black">
                        <custCtl:DecimalBox HorizontalAlignment="Center" Width="150" Height="auto"  
                        DecimalValue="{Binding minValue, Mode=TwoWay}" />
                    </GroupBox>
                    <GroupBox Header="Max Value:"  BorderBrush="Black">
                        <custCtl:DecimalBox HorizontalAlignment="Center" Width="150" Height="auto"  
                        DecimalValue="{Binding maxValue, Mode=TwoWay}" />
                    </GroupBox>
                </StackPanel>            
            </StackPanel>
        </DataTemplate>

        <DataTemplate DataType    = "{x:Type local:UDTDateItem}">
            <StackPanel  Margin="0 5 0 0" ClipToBounds="False" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                <!--<ContentControl Template="{StaticResource MyPop}"/>-->
                <Border  BorderThickness="0,0,0,0" BorderBrush="Black">
                    <StackPanel>
                        
                        <WrapPanel Panel.ZIndex="10" Margin="{Binding ButtonWrapPanelMargin}" HorizontalAlignment="Center">
                            <ContentControl Template="{StaticResource ButtonDrag}" />
                            <ContentControl Template="{StaticResource EditButton}" Panel.ZIndex="20"/>
                        </WrapPanel>
                        
                        <ContentControl Template="{StaticResource NameEditBox}" />
                        
                        <!--<TextBox Name="NameEdit" Height="20" MinWidth="{Binding EditBoxMinWidth}" 
                                 Visibility="{Binding SchemaItem, Converter={StaticResource BoolToVis}}"
                                 Margin="0,0,0,0" BorderThickness="2,2,0,2" BorderBrush="Black" Background="{Binding backgroundBrush}"
                             Text="{Binding Name, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
                             HorizontalAlignment="Center" VerticalContentAlignment="Center" 
                                 vm:FocusExtension.IsFocused="{Binding PopUpOpen}" 
                                 ToolTip="Edit Item Name"  IsEnabled="{Binding EditBoxEnabled}"/>-->

                    </StackPanel>
                </Border>
            </StackPanel>
        </DataTemplate>

        <DataTemplate DataType = "{x:Type local:UDTDateEditProps}">
            <StackPanel>
                <WrapPanel>
                    <Label HorizontalContentAlignment="Right" Content="Required: " 
                           Width="75"/>
                    <CheckBox Width="80" HorizontalAlignment="Left" IsChecked="{Binding required}"
                             VerticalAlignment="Center"/>
                </WrapPanel>
                <WrapPanel>
                    <Label HorizontalContentAlignment="Right" Content="Default: " 
                           Width="75"/>
                    <ComboBox Width="103" HorizontalAlignment="Left" 
                              SelectedItem="{Binding defaultDate, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                              ItemsSource="{Binding defaultList}"
                             VerticalAlignment="Center"/>
                </WrapPanel>
                <WrapPanel>
                    <Label HorizontalContentAlignment="Right" Content="Edit Format: " 
                           Width="75"/>
                    <ComboBox Width="103" HorizontalAlignment="Left" 
                              SelectedItem="{Binding dateFormat, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                              ItemsSource="{Binding formatList}"
                             VerticalAlignment="Center"/>
                </WrapPanel>

                <GroupBox Header="Edit Tool:" BorderBrush="Black" BorderThickness="1">
                    <WrapPanel>
                        <RadioButton GroupName="EditTool" Content="Calandar" IsChecked="{Binding calandarTool}"/>
                        <RadioButton GroupName="EditTool" Content="Edit Box" IsChecked="{Binding editBoxTool}" 
                                     Margin="3,0,0,0"/>
                    </WrapPanel>
                </GroupBox>

                <GroupBox Header="Allowed Date Range" BorderBrush="Black" BorderThickness="1">
                    <StackPanel>
                        <WrapPanel>
                            <Label Content="Min: "/>
                            <custCtl:DateBox DateTimeValue="{Binding minDate, Mode=TwoWay}" DateFormat="Date_Only"/>
                       </WrapPanel>
                        <WrapPanel>
                            <Label Content="Max: "/>
                            <custCtl:DateBox DateTimeValue="{Binding maxDate, Mode=TwoWay}" DateFormat="Date_Only"/>
                        </WrapPanel>
 
                    </StackPanel>
                    </GroupBox>
            </StackPanel>
        </DataTemplate>

    </UserControl.Resources>
    <Grid  Margin="0, 0, 30, 255">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*" MinWidth="500"/>
            <ColumnDefinition Width="auto" MinWidth="150"/>
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>

        <GroupBox FontWeight="Bold" Header="Data Design" BorderBrush="Black" BorderThickness="2">
            <ScrollViewer HorizontalScrollBarVisibility="Visible" >
            <ListBox FontWeight="Normal" Grid.Column="0" Grid.Row="0" Width="2000"
                     ItemsSource="{Binding SchemaList}" BorderThickness="0">
            </ListBox>
            </ScrollViewer>
        </GroupBox>
        <StackPanel Grid.Column="1" Grid.Row="0">
            <GroupBox FontWeight="Bold" Header="Data Tools" BorderThickness="2" BorderBrush="Black" Padding="0,-3,0,0" >
                <ListBox FontWeight="Normal" HorizontalContentAlignment="Center" VerticalContentAlignment="Center"
                         BorderBrush="Transparent" ItemsSource="{Binding UDTItems}"></ListBox>
            </GroupBox >
            <GroupBox BorderThickness="2" BorderBrush="Black">
                <GroupBox.Header>
                    <WrapPanel>
                        <TextBlock Text="{Binding currentEditItem.TypeName}" FontWeight="Bold"/>
                        <TextBlock Text=" Item: " FontWeight="Bold"/>
                        <TextBlock Text="{Binding currentEditItem.Name}"/>
                    </WrapPanel>
                </GroupBox.Header>
                <StackPanel Background="{Binding currentEditItem.backgroundBrush}">
                    <ContentControl Content="{Binding currentEditItem.editProps}" 
                                    Background="{Binding currentEditItem.backgroundBrush}"/>
                </StackPanel>
            </GroupBox>
            <!--<Button Content="SaveToXml">
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="Click" >
                        <prism:InvokeCommandAction Command="{Binding SaveToXmlCommand}" />
                    </i:EventTrigger>
                </i:Interaction.Triggers>
            </Button>
            <Button Content="ReadFromXmlFile">
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="Click" >
                        <prism:InvokeCommandAction Command="{Binding ReadFromFileCommand}" />
                    </i:EventTrigger>
                </i:Interaction.Triggers>
            </Button>
            <Button Content="CreateDataBase">
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="Click" >
                        <prism:InvokeCommandAction Command="{Binding CreateDataBaseCommand}" />
                    </i:EventTrigger>
                </i:Interaction.Triggers>
            </Button>
            <Button Content="ReadFromDataBase">
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="Click" >
                        <prism:InvokeCommandAction Command="{Binding ReadDataBaseCommand}" />
                    </i:EventTrigger>
                </i:Interaction.Triggers>
            </Button>-->
        </StackPanel>

    </Grid>
</UserControl>
