<Window x:Class="UDTApp.Views.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:prism="http://prismlibrary.com/"
        prism:ViewModelLocator.AutoWireViewModel="True"
        xmlns:views="clr-namespace:UDTApp.Views"
        xmlns:ViewModels="clr-namespace:UDTApp.ViewModels"
        xmlns:diag="clr-namespace:System.Diagnostics;assembly=WindowsBase"
        xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
        Title="UDTApp" Height="600" Width="800">

    <Window.Resources>
        <Style TargetType="TextBox">
            <Setter Property="Validation.ErrorTemplate">
                <Setter.Value>
                    <ControlTemplate>
                        <StackPanel>
                            <Border BorderThickness="2" BorderBrush="DarkRed">
                                <StackPanel>
                                    <AdornedElementPlaceholder
                                x:Name="errorControl" />
                                </StackPanel>
                            </Border>
                            <TextBlock Text="{Binding AdornedElement.ToolTip
                        , ElementName=errorControl}" Foreground="Red" />
                        </StackPanel>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="Validation.HasError" Value="true">
                    <Setter Property="BorderBrush" Value="Red" />
                    <Setter Property="BorderThickness" Value="1" />
                    <Setter Property="ToolTip"
                Value="{Binding RelativeSource={RelativeSource Self}
                    , Path=(Validation.Errors)[0].ErrorContent}" />
                </Trigger>
            </Style.Triggers>
        </Style>
    </Window.Resources>

    <i:Interaction.Triggers>
        <i:EventTrigger EventName="Loaded">
            <i:InvokeCommandAction Command="{Binding WindowLoadedCommand}" />
        </i:EventTrigger>
    </i:Interaction.Triggers>

    <!--<Grid>
        <TextBox Text="{Binding Name, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" IsReadOnly="False" x:Name="fieldLable" HorizontalAlignment="Left" Height="23" Margin="89,58,0,0" TextWrapping="Wrap" VerticalAlignment="Top" Width="120"/>
        <TextBox Text="{Binding Value, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" IsReadOnly="False" x:Name="fieldValue" HorizontalAlignment="Left" Height="23" Margin="244,58,0,0" TextWrapping="Wrap" VerticalAlignment="Top" Width="120"/>
        <Button Command="{Binding UpdateCommand}" Content="Save" HorizontalAlignment="Left" Margin="89,165,0,0" VerticalAlignment="Top" Width="75"/>
        <Button Command="{Binding CancelCommand}" Content="Cancel" HorizontalAlignment="Left" Margin="341,165,0,0" VerticalAlignment="Top" Width="75"/>
        <TextBox Text="{Binding RunTimeProps.newProp, Mode=TwoWay}" IsReadOnly="False" x:Name="newProp" HorizontalAlignment="Left" Height="23" Margin="244,100,0,0" TextWrapping="Wrap" VerticalAlignment="Top" Width="120"/>
    </Grid>-->

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>

        <StackPanel Orientation="Horizontal">
            <Button Content="Data" Margin="5" Command="{Binding NavigateCommand}" CommandParameter="Data"/>
            <Button Content="SetUp" Margin="5" Command="{Binding NavigateCommand}" CommandParameter="SetUp"/>
        </StackPanel>

        <ContentControl Grid.Row="1" prism:RegionManager.RegionName="ContentRegion" Margin="0,0,-24.333,-254.333"/>
        <!--<ContentControl Grid.Row="2" prism:RegionManager.RegionName="ContentRegion2"/>-->

    </Grid>


</Window>
    
