<Window x:Class="UDTApp.Views.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:prism="http://prismlibrary.com/"
        prism:ViewModelLocator.AutoWireViewModel="True"
        xmlns:views="clr-namespace:UDTApp.Views"
        xmlns:ViewModels="clr-namespace:UDTApp.ViewModels"
        xmlns:contrls="clr-namespace:UDTApp.ViewModels.DataEntryControls"
        xmlns:diag="clr-namespace:System.Diagnostics;assembly=WindowsBase"
        xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
        xmlns:ribbon="http://schemas.microsoft.com/winfx/2006/xaml/presentation/ribbon"
        Name="mainWindow"
        Title="UDTApp" Height="600" Width="800">

    <Window.Resources>
        
        <Style TargetType="TextBox">
            <Setter Property="Validation.ErrorTemplate">
                <Setter.Value>
                    <ControlTemplate>
                        <StackPanel>
                            <Border HorizontalAlignment="Left" BorderThickness="2" BorderBrush="Red">
                                <StackPanel>
                                    <AdornedElementPlaceholder
                                x:Name="errorControl" />
                                </StackPanel>
                            </Border>
                            <TextBlock Height="15" Text="{Binding AdornedElement.ToolTip
                        , ElementName=errorControl}" Foreground="Red" />
                        </StackPanel>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="Validation.HasError" Value="true">
                    <Setter Property="BorderBrush" Value="Red" />
                    <Setter Property="BorderThickness" Value="1" />
                    <Setter Property="ToolTip"
                Value="{Binding RelativeSource={RelativeSource Self}
                    , Path=(Validation.Errors)[0].ErrorContent}" />
                </Trigger>
            </Style.Triggers>
        </Style>

    </Window.Resources>

    <i:Interaction.Triggers>
        <i:EventTrigger EventName="Loaded">
            <i:InvokeCommandAction Command="{Binding WindowLoadedCommand}" CommandParameter="{Binding ElementName=mainWindow}"/>
        </i:EventTrigger>
        <!--<i:EventTrigger EventName="Closing">
            <i:InvokeCommandAction Command="{Binding WindowClosingCommand}" />
        </i:EventTrigger>-->
    </i:Interaction.Triggers>
    
    
    

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>
        <Border Background="Azure"  BorderThickness="2" BorderBrush="LightBlue"  Width="auto" CornerRadius="2">
            <Grid Width="auto" Grid.Row="0" Grid.Column="0">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="auto"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <WrapPanel Grid.Column="0">
                    <Button Command="{Binding OpenCommand}"  Content="Open Dateset"/>
                    <Button Margin="3,0,0,0" Command="{Binding NewCommand}"  Content="New Dataset"/>
                    <Menu Margin="3,0,0,0">
                        <MenuItem Height="20" x:Name="fileMenu" Header="_Recent Datasets" >
                            <i:Interaction.Triggers>
                                <i:EventTrigger EventName="SubmenuOpened">
                                    <i:InvokeCommandAction Command="{Binding SubmenuOpenedCommand}" CommandParameter="{Binding ElementName=fileMenu}"/>
                                </i:EventTrigger>
                            </i:Interaction.Triggers>
                            <MenuItem Header="_New" Command="{Binding NewCommand}"/>
                            <MenuItem Header="_Open" Command="{Binding OpenCommand}"/>
                            <MenuItem Header="_Save" Command="{Binding SaveDataCommand}"/>
                            <Separator />
                        </MenuItem>
                    </Menu>
                    <RadioButton GroupName="View" Command="{Binding ViewDatasetCommand}" VerticalAlignment="Center" 
                                IsChecked ="{Binding dataSetVisible, Mode=TwoWay}" Margin="3,0,0,0" >
                        Dataset View
                    </RadioButton>
                    <RadioButton GroupName="View" Command="{Binding ViewDesignCommand}" VerticalAlignment="Center"
                                 IsChecked ="{Binding designVisible, Mode=TwoWay}" Margin="3,0,0,0" >
                        Design View
                    </RadioButton>
 
                </WrapPanel>
                <WrapPanel Grid.Column="1" HorizontalAlignment="Right">
                    <Label Content="Dataset: " Height="20" VerticalContentAlignment="Center" Padding="0"/>
                    <TextBlock FontWeight="SemiBold" Foreground="Blue"  Margin="0,0,10,0" VerticalAlignment="Center" Text="{Binding projectName, Mode=TwoWay}"/>
                    <Button Margin="3,0,0,0" Command="{Binding AboutCommand}" HorizontalAlignment="Right" Content="Help"/>
                    <Button Margin="3,0,0,0" Command="{Binding AboutCommand}" HorizontalAlignment="Right" Content="About"/>
                </WrapPanel>
            </Grid>
        </Border>
        <Border Grid.Row="1" Background="Azure" HorizontalAlignment="Right" BorderThickness="2" 
               Visibility="{Binding saveRemoveButtonVisibility, Mode=TwoWay}" BorderBrush="LightBlue" 
               Width="auto" CornerRadius="2">
        <WrapPanel HorizontalAlignment="Right" Grid.Row="1" Width="auto">
            <TextBlock VerticalAlignment="Center" Visibility="{Binding dataSetStatusVisibility, Mode=TwoWay}" 
                        Text="Dataset Status: "/>
            <TextBlock VerticalAlignment="Center"  Visibility="{Binding dataSetStatusVisibility, Mode=TwoWay}"
                        Foreground="{Binding dataSetStatusColor, Mode=TwoWay}"
                        Text="{Binding dataSetStatus}" Margin="0,0,0,0"/>
            
            <TextBlock  VerticalAlignment="Center" Visibility="{Binding projectStatusVisibility, Mode=TwoWay}" Text="Design Status: "
                       Margin="10,0,0,0"/>
            <TextBlock VerticalAlignment="Center" Foreground="{Binding projectStatusColor, Mode=TwoWay}" 
                       Visibility="{Binding projectStatusVisibility, Mode=TwoWay}"  
                       Text="{Binding projectStatus}" Margin="0,0,10,0"/>

             <Button Margin="3,0,0,0" Command="{Binding SaveCommand}" Content="Save Changes"
                    Visibility="{Binding saveRemoveButtonVisibility, Mode=TwoWay}"/>
            <Button Margin="3,0,0,0" Command="{Binding UndoChangesCommand}" Content="Undo Changes"
                    Visibility="{Binding saveRemoveButtonVisibility, Mode=TwoWay}"/>
        </WrapPanel>
        </Border>
        <!--<StackPanel Grid.Row="1" Grid.Column="0" Orientation="Horizontal">
            <Button Content="Data" Margin="5" Command="{Binding NavigateCommand}" CommandParameter="Data"/>
            <Button Content="SetUp" Margin="5" Command="{Binding NavigateCommand}" CommandParameter="SetUp"/>
        </StackPanel>-->

        <ContentControl Grid.Row="2" Grid.Column="0" prism:RegionManager.RegionName="ContentRegion" Margin="0,0,-24.333,-254.333"/>
        <!--<ContentControl Grid.Row="1" Grid.Column="0" prism:RegionManager.RegionName="ContentRegion" 
                        HorizontalAlignment="Stretch" VerticalAlignment="Stretch"/>-->

    </Grid>


</Window>
    
